//NOTE:VCC=2.8-3.3V,IOVCC=1.8V
L644/L649: Display resolution:480*480

L651: params->dsi.vertical_sync_active=10

L652: params->dsi.vertical_backporch=60
L650: params->dsi.vertical_frontporch=40

L646: params->dsi.horizontal_sync_active=8

L647: params->dsi.horizontal_backporch=56
L645: params->dsi.horizontal_frontporch=20

L641: params->RGB_CLOCK=(20)Mhz
Frame Rate=60HZ
/**********************LCD***************************/
void initi(void)
{
   res=1;
   delay(1);
   res=0;
   delay(10);
   res=1;
   delay(120);
 //**************************************  
write_command(0xFF);
write_data(0x77);
write_data(0x01);
write_data(0x00);
write_data(0x00);
write_data(0x13);

write_command(0xEF);
write_data(0x08);

write_command(0xFF);
write_data(0x77);
write_data(0x01);
write_data(0x00);
write_data(0x00);
write_data(0x10);

write_command(0xC0);
write_data(0x3B);
write_data(0x00);

write_command(0xC1);
write_data(0x10);
write_data(0x0C);

write_command(0xC2);////Inversion selection
write_data(0x31); //31-2dot ,37-Column 
write_data(0x0A);

write_command(0xC3);
write_data(0x02);

write_command(0xCC);
write_data(0x10);

write_command(0xCD);
write_data(0x08);

//**********GAMMA SET***************//
// L692 
write_command(0xB0);
write_data(0x40);
write_data(0x0E);
write_data(0x58);
write_data(0x0E);
write_data(0x12);
write_data(0x08);
write_data(0x0C);
write_data(0x09);
write_data(0x09);
write_data(0x27);
write_data(0x07);
write_data(0x18);
write_data(0x15);
write_data(0x78);
write_data(0x26);
write_data(0xC7);

// L709
write_command(0xB1);
write_data(0x40);
write_data(0x13);
write_data(0x5B);
write_data(0x0D);
write_data(0x11);
write_data(0x06);
write_data(0x0A);
write_data(0x08);
write_data(0x08);
write_data(0x26);
write_data(0x03);
write_data(0x13);
write_data(0x12);
write_data(0x79);
write_data(0x28);
write_data(0xC9);

/*-----------------------------End Gamma Setting------------------------------*/
/*------------------------End Display Control setting-------------------------*/
/*-----------------------------Bank0 Setting  End-----------------------------*/
/*-------------------------------Bank1 Setting--------------------------------*/
/*--------------------- Power Control Registers Initial ----------------------*/
write_command(0xFF);
write_data(0x77);
write_data(0x01);
write_data(0x00);
write_data(0x00);
write_data(0x11);

//L729 write_command(0xB0);
//L728 write_data(0x6D); // (0x6d * 12500) + 3537500
/*--------------------------------Vcom Setting--------------------------------*/
//L729 write_command(0xB1);
//L729 write_data(0x38);//VOCM (0x38 * 12500) + 100000
/*------------------------------End Vcom Setting------------------------------*/
L730: write_command(0xB2);
L730: write_data(0x81;//84 (0x81 * 500) + 11500. But value gets clamped, and everything else is 15000 so leaving it

L283: write_command(0xB3);
L283: write_data(0x80);

L731: write_command(0xB5);
L731: write_data(0x4E);//4E

L734-L736: write_command(0xB7);
L734-L736: write_data(0x85); 0b1000 0101

write_command(0xB8);
write_data(0x20);

write_command(0xC1);
write_data(0x78);

write_command(0xC2);
write_data(0x78);

write_command(0xD0);
write_data(0x88);
/*--------------------End Power Control Registers Initial --------------------*/
//********GIP SET********************///
write_command(0xE0);
write_data(0x00);
write_data(0x00);
write_data(0x02);

write_command(0xE1);
write_data(0x06);
write_data(0x30);
write_data(0x08);
write_data(0x30);
write_data(0x05);
write_data(0x30);
write_data(0x07);
write_data(0x30);
write_data(0x00);
write_data(0x33);
write_data(0x33);

write_command(0xE2);
write_data(0x11);
write_data(0x11);
write_data(0x33);
write_data(0x33);
write_data(0xF4);
write_data(0x00);
write_data(0x00);
write_data(0x00);
write_data(0xF4);
write_data(0x00);
write_data(0x00);
write_data(0x00);

write_command(0xE3);
write_data(0x00);
write_data(0x00);
write_data(0x11);
write_data(0x11);

write_command(0xE4);
write_data(0x44);
write_data(0x44);

write_command(0xE5);
write_data(0x0D);
write_data(0xF5);
write_data(0x30);
write_data(0xF0);
write_data(0x0F);
write_data(0xF7);
write_data(0x30);
write_data(0xF0);
write_data(0x09);
write_data(0xF1);
write_data(0x30);
write_data(0xF0);
write_data(0x0B);
write_data(0xF3);
write_data(0x30);
write_data(0xF0);

write_command(0xE6);
write_data(0x00);
write_data(0x00);
write_data(0x11);
write_data(0x11);

write_command(0xE7);
write_data(0x44);
write_data(0x44);

write_command(0xE8);
write_data(0x0C);
write_data(0xF4);
write_data(0x30);
write_data(0xF0);
write_data(0x0E);
write_data(0xF6);
write_data(0x30);
write_data(0xF0);
write_data(0x08);
write_data(0xF0);
write_data(0x30);
write_data(0xF0);
write_data(0x0A);
write_data(0xF2);
write_data(0x30);
write_data(0xF0);

write_command(0xE9);
write_data(0x36);
write_data(0x01);

write_command(0xEB);
write_data(0x00);
write_data(0x01);
write_data(0xE4);
write_data(0xE4);
write_data(0x44);
write_data(0x88);
write_data(0x40);

write_command(0xED);
write_data(0xFF);
write_data(0x45);
write_data(0x67);
write_data(0xFA);
write_data(0x01);
write_data(0x2B);
write_data(0xCF);
write_data(0xFF);
write_data(0xFF);
write_data(0xFC);
write_data(0xB2);
write_data(0x10);
write_data(0xAF);
write_data(0x76);
write_data(0x54);
write_data(0xFF);

write_command(0xEF);
write_data(0x10);
write_data(0x0D);
write_data(0x04);
write_data(0x08);
write_data(0x3F);
write_data(0x1F);

write_command(0xFF);
write_data(0x77);
write_data(0x01);
write_data(0x00);
write_data(0x00);
write_data(0x00);

write_command(0x11);
delay(120);

write_command(0x29);
delay(25);
write_command(0x35);
write_data(0x00);

}

//*******************************************
void EnterSleep (void)
{
    write_command(0x28);
    delay(10);
    write_command(0x10);
}

//*********************************************************
void ExitSleep (void)

{
    write_command(0x11);
    delay(120);
    write_command(0x29);
}
